syntax = "proto3";

package helium.verification_mapping;

message subscriber_mapping_event_req_v1 {
  /// The id of the discovery mapping enabled subscriber
  string subscriber_id = 1;
  /// The accumulated mapping points the subscriber has earned this epoch
  uint64 total_reward_points = 2;
  /// Unix timestamp in seconds of when the mapping event was generated
  uint64 timestamp = 3;
  /// Pubkey of verification mapping event service
  bytes pub_key = 6;
  /// Signed payload of the verification mapping event service
  bytes signature = 7;
}

message subscriber_mapping_event_res_v1 {
  string id = 1;
}

message verified_subscriber_mapping_event_v1 {
  /// The id of the discovery mapping enabled subscriber
  string subscriber_id = 1;
  /// The accumulated mapping points the subscriber has earned this epoch
  uint64 total_reward_points = 2;
  /// Unix timestamp in seconds of when the mapping event was generated
  uint64 timestamp = 3;
}